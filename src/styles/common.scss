@each $alignName, $align in
  (c, center),
  (l, left),
  (r, right) {
  .t-#{$alignName}{text-align: $align;}
  .f-#{$alignName} {float: $align;}
}

@each $displayName, $display in
  (db, block),
  (dib, inline-block),
  (di, inline),
  (df, flex),
  (dt, table) {
  .#{$displayName}{display: $display;}
}

@each $posType in
  static,
  fixed,
  absolute,
  relative {
  .pos-#{$posType} {
    position: $posType;
  }  
}

@each $cursor in
  auto,
  pointer,
  wait,
  help,
  move,{
  .cur-#{$cursor} {
    cursor: $cursor;
  }
}

/* size of margin/border/padding */
$size: 0;
@while $size <= 30 {
  .m-#{$size} { margin: 1px * $size; }
  .m-t-#{$size} { margin-top: 1px * $size; }
  .m-r-#{$size} { margin-right: 1px * $size; }
  .m-b-#{$size} { margin-bottom: 1px * $size; }
  .m-l-#{$size} { margin-left: 1px * $size; }
  .p-#{$size} { padding: 1px * $size; }
  .p-t-#{$size} { padding-top: 1px * $size; }
  .p-r-#{$size} { padding-right: 1px * $size; }
  .p-b-#{$size} { padding-bottom: 1px * $size; }
  .p-l-#{$size} { padding-left: 1px * $size; }
  @if $size <= 10 {
    .b-#{$size} { border-width: 1px * $size; }
    .b-t-#{$size} { border-top-width: 1px * $size; }
    .b-r-#{$size} { border-right-width: 1px * $size; }
    .b-b-#{$size} { border-bottom-width: 1px * $size; }
    .b-l-#{$size} { border-left: 1px * $size; }
  }
  .f-z-#{$size} { font-size: 1px * $size;}
  $size: $size + 1;
}


/* mixin style */
@mixin clearfix {
  display: inline-block;
  &:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }
  * html & { height: 1px }
}

/* set color of background,text and border */
@mixin bg_text_border-color($bgColor, $textColor, $borderColor) {
  background-color: $bgColor;
  color: $textColor;
  border-color: $borderColor;
}

/* common theme colors */
$color-333: #333;
$color-666: #666;
$color-999: #999;
$color-ccc: #ccc;
$color-ddd: #ddd;
$color-eee: #eee;
$color-cbcfd4: #cbcfd4;
$color-f5:#f5f5f5;
$white: #ffffff;
$color-00b4c5: #00b4c5;
$color-67C23A: #67C23A;
@each $colorName, $color in
  (color-333, $color-333),
  (color-666, $color-666),
  (color-999, $color-999),
  (color-ccc, $color-ccc),
  (color-ddd, $color-ddd),
  (color-eee, $color-eee),
  (color-cbcfd4, $color-cbcfd4),
  (color-00b4c5, $color-00b4c5),
  (color-67C23A, $color-67C23A),
  (color-white, $white) {
  .text-#{$colorName} { color: $color; }
  .border-#{$colorName} { border-color: $color; }
  .border-left-#{$colorName} {border-left-color: $color;}
  .border-right-#{$colorName} {border-right-color: $color;}
  .border-top-#{$colorName} {border-top-color: $color;}
  .border-bottom-#{$colorName} {border-bottom-color: $color;}
}

/* set button style */
$hoverOpacity: 0.78;
.el-button{
  color: $white;
  &.el-button--primary {
    @include bg_text_border-color($color-00b4c5, $white, $color-00b4c5);
    &:hover{
      opacity: $hoverOpacity;
    }
  }
}

/* set form item style */
.el-form-item__content {
  @include bg_text_border-color($white, $color-999, $color-cbcfd4);
}
/* readonly form item */
.el-input__inner{
  &[readonly="readonly"]:focus,
  &[readonly="readonly"]:hover{
    border-color: $readonlyColor;
  }
}

/* set dropdown style */
.el-dropdown-menu__item {
  &:focus, &:not(.is-disabled):hover{
    color: $color-00b4c5;
  }
}
/* set button style */
.el-button{
  color: $color-666;
  min-width: 80px;
}

/* set common-container style */
.common-container{
  position: absolute;
  min-height: calc(100% - 32px);
  width: calc(100% - 32px);
}
.common-form{
  width: 60%;
  min-width: 400px;
  margin: auto;
  .el-select{
    width: 100%;
  }
}
.custom-hover{
  &:hover{
    color: $color-00b4c5;
  }
}
.shadow{
  box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);
}
.common-border{
  border: 1px solid $color-eee;
}
.l{
  float: left;
}
.r{
  float: right;
}
.b{
  font-weight: bold;
}
.m-a{
  margin: auto;
}
.w-100{
  width: 100%;
}
.h-100{
  height: 100%;
}
